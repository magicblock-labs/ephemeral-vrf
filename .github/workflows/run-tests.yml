name: Run Tests
on:
  push:
    branches:
      - main
  pull_request:

env:
  solana_version: stable
  rust_version: stable

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      solana_path: ${{ steps.setup-solana.outputs.solana_path }}
    steps:
      - uses: actions/checkout@v4

      - name: install essentials
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev
          npm install --global yarn

      - name: Install Rust
        shell: "bash"
        run: |
          rustup toolchain install ${{ env.rust_version }} --profile minimal
          rustup update

      - uses: actions/cache@v4
        name: cache solana cli
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0001-${{ env.solana_version }}

      - name: install solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sh -c "$(curl -sSfL https://release.anza.xyz/${{ env.solana_version }}/install)"

      - name: Set Solana path
        id: setup-solana
        run: |
          echo "solana_path=$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_OUTPUT
          export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
          solana --version

  lint:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Run fmt
        run: cargo fmt -- --check
      - name: Run clippy
        run: cargo clippy -- --deny=warnings

  test:
    needs: [setup, lint]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        name: cache solana cli
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0001-${{ env.solana_version }}

      - name: setup solana
        run: |
          export PATH="${{ needs.setup.outputs.solana_path }}:$PATH"
          solana --version
          solana-keygen new --silent --no-bip39-passphrase

      - name: run build
        run: |
          export PATH="${{ needs.setup.outputs.solana_path }}:$PATH"
          cargo build
          cargo build-sbf --features test-sbf

      - name: run integration tests
        run: |
          export PATH="${{ needs.setup.outputs.solana_path }}:$PATH"
          npm install -g @magicblock-labs/bolt-cli
          cd program/tests/integration/use-randomness
          npm install
          bolt test

      - name: run tests
        run: |
          export PATH="${{ needs.setup.outputs.solana_path }}:$PATH"
          cargo test-sbf --features test-sbf